spring:
  application:
    name: subscriptions-holder

  jpa:
    generate-ddl: false
    hibernate:
      ddl-auto: validate

    show-sql: true

  # gets these from testcontainers
  datasource:
    url: jdbc:postgresql://localhost:5432/test
    username: postgres
    password: 123456
    driver-class-name: org.postgresql.Driver
  flyway:
    locations: classpath:db/migration
    enabled: true


server:
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: on_param
    include-exception: false
  port: 8082

#eureka:
#  client:
#    registerWithEureka: true
#    serviceUrl:
#      defaultZone: ${EUREKA_SERVER:http://localhost:8761/eureka}
#    healthcheck:
#      enabled: true
#  instance:
#    prefer-ip-address: true
#    lease-renewal-interval-in-seconds: 30
#    lease-expiration-duration-in-seconds: 90
  #    instance-id: "${spring.application.name}:${server.port}"

management:
  info:
    env:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  health:
    defaults:
      enabled: true
    diskspace:
      enabled: true
#  zipkin:
#    tracing:
#      connect-timeout: 1s
#      read-timeout: 10s
#      endpoint: ${ZIPKIN_SERVER:http://localhost:9411/api/v2/spans}
#  tracing:
#    sampling:
#      probability: 1.0

  # For Exemplars to work we need histogram buckets
#  metrics:
#    tags:
#      application: ${spring.application.name}
#    distribution:
#      percentiles-histogram:
#        http.server.requests: true

logging:
  level:
    root: INFO
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"