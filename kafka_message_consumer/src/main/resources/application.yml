application:
  kafka:
    topic:
      coub-subscriptions: "coub-subscriptions"
    consumers:
      community-coubs-consumer:
        group-id: "community-coubs-consumer-group"
        client-id: "community-coubs-consumer-id" # custom props configuration in factory
      tag-coubs-consumer:
        group-id: "tag-coubs-consumer-group"
        client-id: "tag-coubs-consumer-id" # custom props configuration in factory
      coubs-consumer: # for handlers in one listener
        group-id: "coubs-consumer-group"
        client-id: "coubs-consumer-id"


spring:
  application:
    name: kafka-message-consumer
  kafka:
    bootstrap-servers: ${KAFKA_SERVER:127.0.0.1:9092}
    consumer:
      bootstrap-servers: ${KAFKA_SERVER:http://127.0.0.1:9092}
      client-id: "coubs-consumer" # default one
      group-id: "coubs_group"
    listener:
      ack-mode: batch



server:
  port: 8085


logging:
  level:
    root: INFO
    ru:
      dankoy:
        kafkamessageconsumer:
          core:
            feign: TRACE
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"


eureka:
  client:
    registerWithEureka: true
    serviceUrl:
      defaultZone: ${EUREKA_SERVER:http://localhost:8761/eureka}
    healthcheck:
      enabled: true
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90
    #    instance-id: "${spring.application.name}:${server.port}"


management:
  info:
    env:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  health:
    defaults:
      enabled: true
    diskspace:
      enabled: true
  zipkin:
    tracing:
      connect-timeout: 1s
      read-timeout: 10s
      endpoint: ${ZIPKIN_SERVER:http://localhost:9411/api/v2/spans}

  tracing:
    sampling:
      probability: 1.0

  # For Exemplars to work we need histogram buckets
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        http.server.requests: true

#debug: true

