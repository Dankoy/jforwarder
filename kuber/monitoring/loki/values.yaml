# useExternalConfig: false
# global:
#   extraEnvFrom:
#     - secretRef:
#         name: loki-secret
#   podAnnotations:
#     bucketSecretVersion: "0"

# Disable minio storage
minio:
  enabled: false

deploymentMode: SingleBinary

singleBinary:
  replicas: 1

loki:
  auth_enabled: false
  commonConfig:
    replication_factor: 1
  schemaConfig:
    configs:
      - from: "2024-04-01"
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
  storage_config:
    aws:
      region: null
      bucketnames: loki-chunks
      s3forcepathstyle: true
  pattern_ingester:
      enabled: true
  limits_config:
    allow_structured_metadata: true
    volume_enabled: true
    retention_period: 672h # 28 days retention

  storage:
    type: s3
    bucketNames:
      chunks: loki-chunks
      ruler: loki-ruler
      admin: loki-admin
    s3:
      # s3 URL can be used to specify the endpoint, access key, secret key, and bucket name this works well for S3 compatible storages 
      # or are hosting Loki on-premises and want to use S3 as the storage backend. Either use the s3 URL or the individual fields below (AWS endpoint, region, secret).
      # s3: s3://minio:secretpassword@custom_endpoint/bucket_name
      # AWS endpoint URL
      endpoint: https://minio.minio:443
      # AWS region where the S3 bucket is located
      region: null
      # AWS secret access key
      secretAccessKey: ${SECRET_ACCESS_KEY}
      # AWS access key ID
      accessKeyId: ${ACCESS_KEY_ID}
      # AWS signature version (e.g., v2 or v4)
      # signatureVersion: <your-signature-version>
      # Forces the path style for S3 (true/false)
      s3ForcePathStyle: true
      # Allows insecure (HTTP) connections (true/false)
      insecure: true
      # HTTP configuration settings
      # This shit makes loki connect to minio as bucket.minio.namespace. 
      # Disable it { } and then loki goes to normal service
      # But there is a problem with tls on 443 port because it is self signed
      http_config:
        # idle_conn_timeout: 90s
        # response_header_timeout: 0s
        insecure_skip_verify: true

    object_store:
      type: s3
      # Optional prefix for storage keys
      storage_prefix: null
      # S3 configuration (when type is "s3")
      s3:
        endpoint: https://minio.minio:443
        # Optional region
        region: null
        # Optional access key
        access_key_id: ${ACCESS_KEY_ID}
        # Optional secret key
        secret_access_key: ${SECRET_ACCESS_KEY}
        # Optional. Enable if using self-signed TLS
        insecure: false
        # Optional server-side encryption configuration
        sse: {}
        # Optional HTTP client configuration
        http:
          insecure_skip_verify: true

  memcached:
    chunk_cache:
      enabled: false
    results_cache:
      enabled: false


# Zero out replica counts of other deployment modes
backend:
  replicas: 0
read:
  replicas: 0
write:
  replicas: 0

chunksCache:
  enabled: false
ingester:
  replicas: 0
querier:
  replicas: 0
queryFrontend:
  replicas: 0
queryScheduler:
  replicas: 0
distributor:
  replicas: 0
compactor:
  replicas: 0
indexGateway:
  replicas: 0
bloomCompactor:
  replicas: 0
bloomGateway:
  replicas: 0