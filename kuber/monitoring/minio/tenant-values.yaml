tenant:
  name: minio
  namespace: minio
  configuration:
    name: minio-env-configuration
  configSecret: 
    name: minio-env-configuration
    existingSecret: true

  pools:
    ###
    # The number of MinIO Tenant Pods / Servers in this pool.
    # For standalone mode, supply 1. For distributed mode, supply 4 or more.
    # Note that the operator does not support upgrading from standalone to distributed mode.
    - servers: 1
      ###
      # Custom name for the pool
      name: pool-0
      ###
      # The number of volumes attached per MinIO Tenant Pod / Server.
      volumesPerServer: 1
      ###
      # The capacity per volume requested per MinIO Tenant Pod.
      size: 25Gi
      ###
      # The `terminationGracePeriodSeconds <https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#pod-termination-grace-period>`__ for MinIO Tenant Pods.
      # terminationGracePeriodSeconds: 30
      ###
      # The `storageClass <https://kubernetes.io/docs/concepts/storage/storage-classes/>`__ to associate with volumes generated for this pool.
      #
      # If using Amazon Elastic Block Store (EBS) CSI driver
      # Please make sure to set xfs for "csi.storage.k8s.io/fstype" parameter under StorageClass.parameters.
      # Docs: https://github.com/kubernetes-sigs/aws-ebs-csi-driver/blob/master/docs/parameters.md
      storageClassName: local-storage

  ###
  # The mount path where Persistent Volumes are mounted inside Tenant container(s).
  mountPath: /export
  ###
  # The Sub path inside Mount path where MinIO stores data.
  #
  # .. warning::
  #
  #    Treat the ``mountPath`` and ``subPath`` values as immutable once you deploy the Tenant.
  #    If you change these values post-deployment, then you may have different paths for new and pre-existing data.
  #    This can vastly increase operational complexity and may result in unpredictable data states.
  subPath: /data
  ###
  # Configures a Prometheus-compatible scraping endpoint at the specified port.
  metrics:
    enabled: true
    port: 9000
    protocol: http

  provisionedBuckets: true
  buckets: 
  - name: mimir-blocks
    objectLock: false        # optional
    region: null       # optional
  - name: mimir-ruler
    objectLock: false        # optional
    region: null      # optional
  - name: mimir-storage
    objectLock: false        # optional
    region: null       # optional
  - name: mimir
    objectLock: false
    region: null
  - name: loki-chunks
    objectLock: false        # optional
    region: null       # optional
  - name: loki-ruler
    objectLock: false        # optional
    region: null       # optional
  - name: loki-admin
    objectLock: false        # optional
    region: null       # optional 

  ###
  # Array of Kubernetes secrets from which the Operator generates MinIO users during tenant provisioning.
  #
  # Each secret should specify the ``CONSOLE_ACCESS_KEY`` and ``CONSOLE_SECRET_KEY`` as the access key and secret key for that user.
  users:
  - name: storage-user

ingress:
  api:
    enabled: true
    ingressClassName: ""
    labels: { }
    annotations: { }
    tls:
    - hosts:
        - minio
      secretName: minio-tls
    host: minio
    path: /
    pathType: Prefix
  console:
    enabled: true
    ingressClassName: ""
    labels: { }
    annotations: { }
    tls:
    - hosts:
        - minio-console
      secretName: minio-tls
    host: minio-console
    path: /
    pathType: Prefix