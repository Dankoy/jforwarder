plugins {
    id 'java'
    id 'idea'
//    id 'org.springframework.boot' version '3.1.1'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'ru.dankoy.jforwarder'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

idea {
    project {
        languageLevel = 17
    }
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

//dependencies {
//    implementation 'org.springframework.boot:spring-boot-starter-actuator'
//    implementation 'org.springframework.boot:spring-boot-starter-integration'
//    implementation 'org.springframework.boot:spring-boot-starter-jooq'
//    implementation 'org.springframework.boot:spring-boot-starter-webflux'
//    implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
//    implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'
//    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
//    implementation 'org.springframework.integration:spring-integration-kafka'
//    implementation 'org.springframework.integration:spring-integration-webflux'
//    implementation 'org.springframework.kafka:spring-kafka'
//    compileOnly 'org.projectlombok:lombok'
//    developmentOnly 'org.springframework.boot:spring-boot-devtools'
//    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
//    runtimeOnly 'org.postgresql:postgresql'
//    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
//    annotationProcessor 'org.projectlombok:lombok'
//    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testImplementation 'io.projectreactor:reactor-test'
//    testImplementation 'org.springframework.integration:spring-integration-test'
//    testImplementation 'org.springframework.kafka:spring-kafka-test'
//}

allprojects {

    repositories {
        mavenCentral()
    }

    ext {
        set('springCloudVersion', "2022.0.3")
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }



    tasks.withType(JavaCompile) {
        options.with {
            encoding = 'UTF-8'
        }
    }

}

tasks.named('test') {
    useJUnitPlatform()
}




