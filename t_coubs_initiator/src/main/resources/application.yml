application:
  logs:
    loki:
      url: ${LOKI_URL:http://loki-gateway.monitoring/loki/api/v1/push}

spring:
  application:
    name: t-coubs-initiator
  cloud:
    openfeign:
      client:
        config:
          default:
            connectTimeout: 160000000
            readTimeout: 160000000

server:
  port: 8081

coub:
  connector:
    url: "https://coub.com/"
    apiUrl: "https://coub.com/api/v2/"
    gatewayApiUrl: ${GATEWAY_COUB_URL:http://localhost:8760/cc/}
  sorting: false
  registry:
    filter:
      days: 30

resilience4j.ratelimiter:
  instances:
    coub:
      # one request in one second
      limitForPeriod: 1
      limitRefreshPeriod: 1s
      timeoutDuration: 1s # must be equals or more than limitRefreshPeriod or you get RequestNotPermitted
      registerHealthIndicator: true

logging:
  level:
    root: INFO
    ru:
      dankoy:
        tcoubsinitiator:
          core:
            feign: TRACE
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"


eureka:
  client:
    registerWithEureka: true
    serviceUrl:
      defaultZone: ${EUREKA_SERVER:http://localhost:8761/eureka}
    healthcheck:
      enabled: true
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90
    #    instance-id: "${spring.application.name}:${server.port}"


management:
  info:
    env:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  health:
    defaults:
      enabled: true
    diskspace:
      enabled: true
  zipkin:
    tracing:
      connect-timeout: 1s
      read-timeout: 10s
      endpoint: ${ZIPKIN_SERVER:http://localhost:9411/api/v2/spans}
  tracing:
    sampling:
      probability: 1.0

  # For Exemplars to work we need histogram buckets
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        http.server.requests: true


