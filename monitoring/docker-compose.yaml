version: "3.9"

services:

# can't pull from gcr.io. Permission denied
#  cadvisor:
#    image: gcr.io/cadvisor-arm64:v0.47.2
#    container_name: cadvisor
#    volumes:
#      - '/:/rootfs:ro'
#      - '/var/run:/var/run:ro'
#      - '/sys:/sys:ro'
#      - '/var/lib/docker/:/var/lib/docker:ro'
#    networks:
#      - jforwarder-network

#  tempo:
#    image: grafana/tempo
#    container_name: grafana-tempo
#    command: [ "-config.file=/etc/tempo.yaml" ]
#    volumes:
#      - ./tempo/tempo-local.yml:/etc/tempo.yaml
#      - tempo_volume:/tmp/tempo
#    ports:
#      - "14268"  # jaeger ingest
#      - "9411:9411" # zipkin
#    networks:
#      - jforwarder-network
#
  loki:
    image: grafana/loki
    container_name: grafana-loki
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3100:3100"
    environment:
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    volumes:
      - ./loki/local-config.yaml:/etc/loki/local-config.yaml:ro
      - loki_volume:/loki
    networks:
      - jforwarder-network

  prometheus-node-exporter:
    image: prom/node-exporter:latest
    container_name: prometheus-node-exporter
    user: root
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($$|/)"'
    networks:
      - jforwarder-network

  grafana:
    env_file:
      - .env
    image: 'grafana/grafana:latest'
    container_name: grafana
    ports:
      - '3000:3000'
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - grafana_volume:/var/lib/grafana
      - './grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards'
      - './grafana/provisioning/datasources:/etc/grafana/provisioning/datasources'
    networks:
      - jforwarder-network

  prometheus:
    image: 'prom/prometheus:latest'
    container_name: prometheus
    ports:
      - '9090:9090'
    command: '--config.file=/etc/prometheus/config.yml'
    volumes:
      - './prometheus/prometheus.yml:/etc/prometheus/config.yml'
      - prometheus_volume:/prometheus
    networks:
      - jforwarder-network

  prometheus-postgres-exporter:
    env_file:
      - .env
    image: 'bitnami/postgres-exporter:latest'
    container_name: prometheus-postgres-exporter
    environment:
      - DATA_SOURCE_NAME=${DATA_SOURCE_NAME}
    networks:
      - jforwarder-network

volumes:
  prometheus_volume:
    driver: local
  grafana_volume:
    driver: local
#  tempo_volume:
#    driver: local
  loki_volume:
    driver: local

networks:
  jforwarder-network:
    name: jforwarder-network
    external: true
