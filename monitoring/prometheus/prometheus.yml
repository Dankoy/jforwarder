global:
  scrape_interval: 15s
  scrape_timeout: 10s

rule_files:
  - alertmanager/node-exporter-rules.yml
  - alertmanager/postgresql-rules.yml
  - alertmanager/prom-rules.yml
  - alertmanager/jvm-rules.yml
#  - alertmanager/smart-rules.yml

# Alerting specifies settings related to the Alertmanager
alerting:
  alertmanagers:
    - static_configs:
        - targets:
            # Alertmanager's default port is 9093
            - prometheus-alertmanager:9093

remote_write:
  - url: http://grafana-mimir:9009/api/v1/push
    # Add X-Scope-OrgID header so that Mimir knows what tenant the remote write data should be stored in.
    # In this case, our tenant is "demo"
    headers:
      X-Scope-OrgID: jforwarder

scrape_configs:

  - job_name: 'postgres'
    static_configs:
      - targets: [ 'prometheus-postgres-exporter:9187' ]

  - job_name: 'node'
    static_configs:
      - targets: [ 'prometheus-node-exporter:9100' ]

  - job_name: 'kafka'
    static_configs:
      - targets: ['kafka:12345']

  - job_name: 'jvmMetrics'
    metrics_path: '/actuator/prometheus'
    static_configs:
      - targets: [ 'coub-smart-searcher:8086',
                   'kafka-message-producer:8083',
                   'kafka-message-consumer:8085',
                   'subscriptions-holder:8082',
                   'spring-eureka-registry:8761',
                   'spring-gateway:8760',
                   't-coubs-initiator:8081',
                   'telegram-bot:8084'
      ]

  # - job_name: 'prometheus'
  #   static_configs:
  #     - targets: [ 'host.docker.internal:9090' ]

  #  - job_name: 'cadvisor'
  #    static_configs:
  #      - targets:
  #          - 'cadvisor:8080'

  #  - job_name: 'docker'
  #    static_configs:
  #      - targets: [ 'host.docker.internal:9323' ]


