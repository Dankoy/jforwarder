version: "3.9"

services:
  kafka:
    image: docker.io/bitnami/kafka:3.5
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_KRAFT_CLUSTER_ID=L0ZEQh1yTbGhNNUE7-6wSQ
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    volumes:
      - kafka_volume:/bitnami/kafka
    networks:
      - jforwarder-network

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.1
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_NAME=kraft
    networks:
      - jforwarder-network
    depends_on:
      - kafka

  subscriptions-holder-postgres:
    env_file: .env
    image: 'postgres:latest'
    container_name: subscriptions-holder-postgres-db
    environment:
      POSTGRES_DB: ${POSTGRES_CONTAINER_DB}
      POSTGRES_PASSWORD: ${POSTGRES_CONTAINER_PASSWORD}
      POSTGRES_USER: ${POSTGRES_CONTAINER_USER}
    ports:
      - '5432:5432'
    networks:
      - jforwarder-network
    volumes:
      - subscriptions_holder_postgres_volume:/var/lib/postgresql/data

volumes:
  kafka_volume:
    driver: local
  subscriptions_holder_postgres_volume:
    driver: local

networks:
  jforwarder-network:
    name: jforwarder-network
